[tool.poetry]
name = "cinema-repertoire-analyzer"
version = "0.1.0"
description = ""
authors = ["Jan Wadolowski <janwadolowski@gmail.com>"]

[tool.poetry.dependencies]
python = ">=3.11,<3.12"
typer = "^0.9.0"
loguru = "^0.7.2"
requests-html = "^0.10.0"
beautifulsoup4 = "^4.12.0"
pydantic-settings = "^2.1.0"
pydantic = "^2.5.3"
sqlalchemy = "^2.0.24"
rich = "^13.7.0"

[tool.poetry.group.dev.dependencies]
pydocstyle = "^6.3.0"
mypy = "^0.991"
pytest = "^7.2.1"
isort = "^5.11.4"
flake8-pyproject = "^1.2.2"
types-pyyaml = "^6.0.12.8"
mockito = "^1.4.0"
types-toml = "^0.10.8.5"
pytest-cov = "^4.0.0"
pre-commit = "^3.2.0"
pytest-vcr = "^1.0.2"
ruff = "^0.1.8"
types-beautifulsoup4 = "^4.12.0.7"
types-html5lib = "^1.1.11.15"
autoflake = "^2.2.1"
sqlalchemy-stubs = "^0.4"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest]
asyncio_mode = "auto"

[tool.pytest.ini_options]
pythonpath = ["src"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
check_untyped_defs = true
plugins = ["sqlmypy"]

[tool.ruff]
ignore-init-module-imports = true
line-length = 100
fix = true
src = ["src", "tests"]
target-version = "py310"
task-tags = ["TODO"]
ignore = ["D100", "D107"]

[tool.ruff.format]
quote-style = "double"
docstring-code-line-length = 100
line-ending = "lf"
skip-magic-trailing-comma = true

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.lint.pylint]
allow-dunder-method-names = ["__tablename__"]

[tool.ruff.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"
